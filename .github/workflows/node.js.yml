# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:  
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present

  test_backend_unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run back_unit
      env:    
        ADMIN_INITIAL_PASSWORD: ${{secrets.ADMIN_INITIAL_PASSWORD}}
        JWT_SECRET: ${{secrets.JWT_SECRET}}
        MONGODB_URI: ${{secrets.MONGODB_URI}}
        SESSION_SECRET: ${{secrets.SESSION_SECRET}}
        VH_EMAIL: ${{secrets.VH_EMAIL}}
        VH_EMAIL_PASSWORD: ${{secrets.VH_EMAIL_PASSWORD}}
    - uses: codecov/codecov-action@v2
      with:
        flags: unit
        fail_ci_if_error: true 
        verbose: true

  test_frontend_unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run front_unit
      env:    
        ADMIN_INITIAL_PASSWORD: ${{secrets.ADMIN_INITIAL_PASSWORD}}
        JWT_SECRET: ${{secrets.JWT_SECRET}}
        MONGODB_URI: ${{secrets.MONGODB_URI}}
        SESSION_SECRET: ${{secrets.SESSION_SECRET}}
        VH_EMAIL: ${{secrets.VH_EMAIL}}
        VH_EMAIL_PASSWORD: ${{secrets.VH_EMAIL_PASSWORD}}
    - uses: codecov/codecov-action@v2
      with:
        flags: unit
        fail_ci_if_error: true 
        verbose: true


  test_integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: mkdir screenshots
    - run: npm run integration
      env:    
        ADMIN_INITIAL_PASSWORD: ${{secrets.ADMIN_INITIAL_PASSWORD}}
        JWT_SECRET: ${{secrets.JWT_SECRET}}
        MONGODB_URI: ${{secrets.MONGODB_URI}}
        SESSION_SECRET: ${{secrets.SESSION_SECRET}}
        VH_EMAIL: ${{secrets.VH_EMAIL}}
        VH_EMAIL_PASSWORD: ${{secrets.VH_EMAIL_PASSWORD}}
    - uses: codecov/codecov-action@v2
      with:
        flags: integration
        fail_ci_if_error: true 
        verbose: true
    - uses: actions/upload-artifact@v2
      with:
          name: puppeteer-screenshots
          path: screenshots/
      if: always()

